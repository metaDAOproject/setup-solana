name: 'Setup Solana'
description: 'Install the Solana Tool Suite.'
branding:
  icon: cpu
  color: purple
inputs:
  solana-cli-version:
    description: 'Version of Solana CLI to use'
    required: false
    default: 'stable'
runs:
  using: 'composite'
  steps:
    - name: Checkout version script
      uses: actions/checkout@v4
      with:
        repository: metaDAOproject/setup-solana
        path: .ci
    - name: Determine Solana CLI version
      id: solana-release
      run: |
        chmod +x .ci/scripts/channel-info.sh
        output=$(".ci/scripts/channel-info.sh")
        read -r BETA_CHANNEL_LATEST_TAG STABLE_CHANNEL_LATEST_TAG <<< "$output"

        if [[ "${{ inputs.solana-cli-version }}" =~ ^[a-zA-Z] ]]; then
          if [[ ${{ inputs.solana-cli-version }} =~ ^(edge|stable|beta)$ ]]; then
            if [[ ${{ inputs.solana-cli-version }} == "edge" ]]; then
              echo "Using Solana CLI edge channel"
              echo "install_version=edge" >> $GITHUB_OUTPUT
            elif [[ ${{ inputs.solana-cli-version }} == "stable" ]]; then
              echo "Using Solana CLI stable channel $install_version"
              echo "install_version=$STABLE_CHANNEL_LATEST_TAG" >> $GITHUB_OUTPUT
            elif [[ ${{ inputs.solana-cli-version }} == "beta" ]]; then
              echo "Using Solana CLI beta channel"
              echo "install_version=$BETA_CHANNEL_LATEST_TAG" >> $GITHUB_OUTPUT
            fi
          else
            echo "Invalid Solana CLI channel: ${{ inputs.solana-cli-version }}"
            exit 1
          fi
        else
          echo "Using Solana CLI ${{ inputs.solana-cli-version }}"
          echo "install_version=v${{ inputs.solana-cli-version }}" >> $GITHUB_OUTPUT
        fi
      shell: bash
    - name: Cache Solana CLI tools
      id: cache-solana
      uses: actions/cache@v4
      if: steps.solana-release.outputs.install_version != 'edge'
      with:
        path: |
          ~/.cache/solana/
          ~/.local/share/solana/
        key: solana-cli-${{ runner.os }}-build-${{ steps.solana-release.outputs.install_version }}
    - name: Install Solana CLI tools
      if: steps.cache-solana.outputs.cache-hit != 'true'
      run: |
        sh -c "$(curl -sSfL https://release.solana.com/${{ steps.solana-release.outputs.install_version }}/install)"
      shell: bash
    - name: Update PATH
      run: echo "/home/runner/.local/share/solana/install/active_release/bin" >> $GITHUB_PATH
      shell: bash
